{"version":3,"sources":["Components/Person.js","Components/Filter.js","Components/FilterForm.js","services/persons.js","Components/Alert.js","Components/Error.js","Components/AddPerson.js","App.js","index.js"],"names":["Person","person","toggleDelete","name","number","onClick","filterPersons","arr","query","filter","el","toLowerCase","indexOf","Filter","text","action","value","onChange","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","ErrorNotification","PersonAdd","submit","nameChange","num","numChange","onSubmit","type","App","useState","persons","setPersons","newName","setNewName","newNum","setNewNum","search","setSearch","effectMessage","setEffectMessage","errorMessage","setErrorMessage","useEffect","personsService","initialPersons","personsToShow","Error","event","target","preventDefault","henkl","find","includes","window","confirm","changeNum","map","setTimeout","catch","error","returnedPerson","concat","JSON","stringify","n","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd24478d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Person = ({ person, toggleDelete }) => {\r\n\r\n    return (\r\n        <p>\r\n            {person.name} {person.number}\r\n            <button onClick={toggleDelete}>Delete</button>\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Person","const filterPersons = (arr, query) => {\r\n    return arr.filter(el => el.name.toLowerCase()\r\n    .indexOf(query.toLowerCase()) !== -1 )\r\n  }\r\n\r\nexport default filterPersons","import React from \"react\";\r\n\r\nconst Filter = ({ text, action }) => {\r\n    return (\r\n        <form>\r\n            <div>\r\n                filter shown with\r\n                <input\r\n                    value={text}\r\n                    onChange={action} />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst poisto = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    create: create,\r\n    update: update,\r\n    poisto: poisto\r\n}","const Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n\r\n  \r\n    return (\r\n      <div className=\"effect\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","const ErrorNotification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default ErrorNotification","import react from \"react\";\r\n\r\nconst PersonAdd = ({ submit, name, nameChange, num, numChange }) => {\r\n    return (\r\n        <form onSubmit={submit}>\r\n            <div>\r\n                name:\r\n                <input\r\n                    value={name}\r\n                    onChange={nameChange} />\r\n            </div>\r\n            <div>number:\r\n                <input\r\n                    value={num}\r\n                    onChange={numChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default PersonAdd","import React, { useState, useEffect } from 'react'\nimport Person from './Components/Person'\nimport filterPersons from './Components/Filter'\nimport Filter from './Components/FilterForm'\nimport personsService from './services/persons'\nimport Notification from './Components/Alert'\nimport ErrorNotification from './Components/Error'\nimport PersonAdd from './Components/AddPerson'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNum, setNewNum] = useState('')\n  const [search, setSearch] = useState('')\n  const [effectMessage, setEffectMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumChange = (event) => {\n    setNewNum(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const newObject = {\n      name: newName,\n      number: newNum\n    }\n\n    let henkl = persons.find(person => person.name === newName)\n    if (persons.includes(henkl)) {\n      const result = window.confirm(`${newName} is already added to \n     phonebook, replace the old number with a new one?`)\n\n      if (result === true) {\n        let id = henkl.id\n        const changeNum = { ...henkl, number: newNum }\n\n        personsService\n          .update(id, changeNum)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== id ? person : response))\n            setNewName('')\n            setNewNum('')\n            setEffectMessage(`The old number of ${newName} changed`)\n            setTimeout(() => {\n              setEffectMessage(null)\n            }, 3000)\n          })\n        .catch(error => {\n          setErrorMessage(`${newName} was already deleted from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3000)\n        })\n      }\n    }\n    else {\n      personsService\n        .create(newObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setEffectMessage(`${newName} Added`)\n          setTimeout(() => {\n            setEffectMessage(null)\n          }, 3000)\n        })\n        .catch(error => {\n          setErrorMessage(JSON.stringify(error.response.data.error.message))\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3000)\n        })\n\n    }\n    setNewName('')\n    setNewNum('')\n  }\n\n  const toggleDelete = (id) => {\n    const person = persons.find(n => n.id === id)\n    const result = window.confirm(`Delete ${person.name}`)\n    if (result === true) {\n      personsService\n        .poisto(id)\n        .then(\n          setPersons(persons.filter(n => n.id !== id)))\n          setEffectMessage(`${person.name} deleted`)\n          setTimeout(() => {\n            setEffectMessage(null)\n          }, 3000)\n    }\n\n  }\n\n\n  const personsToShow = filterPersons(persons, search)\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={effectMessage} />\n      <ErrorNotification message={errorMessage}/>\n      <Filter text={search} action={handleSearchChange} />\n      <h2>add a new</h2>\n      <PersonAdd submit={addPerson} name={newName} nameChange={handleNameChange} num={newNum} numChange={handleNumChange}/>\n      <h2>Numbers</h2>\n      <div>\n        {personsToShow.map(person =>\n          <Person\n            key={person.id}\n            person={person}\n            toggleDelete={() => toggleDelete(person.id)}\n          />\n        )}\n      </div>\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}